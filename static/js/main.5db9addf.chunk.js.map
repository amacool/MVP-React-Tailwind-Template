{"version":3,"sources":["components/CustomTimePicker/SelectItem.js","components/CustomTimePicker/index.js","components/CustomDatePicker/helper.js","components/CustomDatePicker/SelectDayPanel.js","components/CustomDatePicker/SelectMonthPanel.js","components/CustomDatePicker/SelectYearPanel.js","components/CustomDatePicker/index.js","components/CustomButton/index.js","components/CustomButtonGroup/index.js","components/CustomSlider/index.js","components/CustomSwitch/index.js","components/SimpleList/index.js","assets/images/arrow-up.svg","assets/images/arrow-down.svg","components/NestedList/listItem.js","components/NestedList/index.js","components/FolderList/index.js","components/CustomTextField/index.js","components/CustomSelectBox/SelectOption.js","components/CustomSelectBox/index.js","components/LinearProgressBar/index.js","components/CircularProgressBar/index.js","components/CustomSnackbar/index.js","components/SnackBarExample/index.js","assets/images/inbox.svg","assets/images/drafts.svg","assets/images/send-mail.svg","assets/images/photo.svg","dataInfo.js","assets/images/star.svg","assets/images/inbox-work.svg","assets/images/drafts-work.svg","App.js","reportWebVitals.js","index.js"],"names":["SelectItem","val","text","isActive","onSetValue","onClick","className","getTwoDigits","CustomTimePicker","label","useState","isOpen","setIsOpen","hour","setHour","minute","setMinute","dayLabel","setDayLabel","toggleContainer","React","createRef","useEffect","window","addEventListener","onClickOutsideHandler","removeEventListener","event","current","contains","target","id","aria-haspopup","aria-expanded","xmlns","viewBox","fill","aria-hidden","fillRule","d","clipRule","enter-active-class","leave-active-class","enter-class","enter-to-class","leave-class","leave-to-class","ref","style","display","role","aria-orientation","aria-labelledby","height","Array","map","_","key","monthNames","weekDays","isLeapYear","y","getDaysInMonth","m","getStartWeekDay","Date","getDay","SelectDayPanel","currentYear","currentMonth","year","month","day","onSetDate","colorClass","weekDay","i","width","outline","SelectMonthPanel","showedYear","onChangeCurrentMonth","monthName","substr","toUpperCase","SelectYearPanel","rangeStartYear","onChangeCurrentYear","CustomDatePicker","defaultValue","color","setYear","setMonth","setDay","getFullYear","setCurrentYear","getMonth","setCurrentMonth","setShowedYear","selectMode","setSelectMode","setRangeStartYear","dateLabel","setDateLabel","getColorClass","getDate","handleSwitchDropdown","setDateFromTextInput","from","char","indexOf","split","length","checkValidDate","onBlur","value","onChange","placeholder","type","version","stroke","strokeWidth","points","transform","CustomButton","size","sizeClass","getSizeClass","defaultProps","CustomButtonGroup","variant","themeClass","getVariantClass","CustomSlider","setValue","draggable","setDraggable","hoverOnCircle","setHoverOnCircle","sliderRef","useRef","getValue","e","sliderWidth","clientWidth","offsetX","Math","abs","clientX","offsetLeft","min","onMouseDown","onMouseMove","onMouseUp","left","boxShadow","onMouseEnter","onMouseOut","CustomSwitch","isOn","setIsOn","aria-pressed","SimpleList","simpleListData","listWithIcon","item","src","icon","alt","name","listWithoutIcon","ListItem","itemData","subList","setSubList","ArrowUpIcon","ArrowDownIcon","NestedList","nestedListData","FolderList","folderListData","date","CustomTextField","variantClass","SelectOption","selectedValue","CustomSelectBox","options","handleSetValue","v","minWidth","tabIndex","aria-activedescendant","option","LinearProgressBar","withLabel","setWidth","transition","CircularProgressBar","radius","lineWidth","canvas","setTimeout","ctx","getContext","clearRect","drawCircle","drawText","strokeStyle","getColor","beginPath","arc","PI","fillStyle","font","textAlign","textBaseline","fillText","toFixed","CustomSnackbar","message","anchorOrigin","onClose","opacity","setOpacity","setTransform","typeClass","getTypeClass","positionStyle","vertical","horizontal","top","right","bottom","getPositionStyle","getIcon","types","SnackbarExample","setType","setVertical","setHorizontal","handleClick","h","listData","InboxIcon","DraftsIcon","EmailSentIcon","PhotoIcon","App","rel","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5db9addf.chunk.js","sourcesContent":["import React  from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getTwoDigits = (val) => val < 10 ? `0${val}` : val;\r\n\r\nexport const SelectItem = ({ text, isActive, onSetValue }) => (\r\n  <div\r\n    onClick={() => onSetValue(text)}\r\n    className={`text-center cursor-pointer p-1 hover:bg-blue-100 ${isActive ? 'bg-blue-500 text-white hover:bg-blue-500' : ''}`}\r\n  >\r\n    {getTwoDigits(text)}\r\n  </div>\r\n);\r\n\r\nSelectItem.propTypes = {\r\n  text: PropTypes.any,\r\n  isActive: PropTypes.bool,\r\n  onSetValue: PropTypes.func,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SelectItem } from './SelectItem';\r\n\r\nconst getTwoDigits = (val) => val < 10 ? `0${val}` : val;\r\n\r\nconst CustomTimePicker = ({ label }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [hour, setHour] = useState(0);\r\n  const [minute, setMinute] = useState(0);\r\n  const [dayLabel, setDayLabel] = useState('AM');\r\n  const toggleContainer = React.createRef();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", onClickOutsideHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", onClickOutsideHandler);\r\n    }\r\n  });\r\n\r\n  const onClickOutsideHandler = event => {\r\n    if (isOpen && toggleContainer.current && !toggleContainer.current.contains(event.target)) {\r\n      setIsOpen(false);\r\n    }\r\n  }\r\n\r\n  const handleSwitchDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto p-6 bg-gray-100 rounded-lg shadow-xl\">\r\n      <label className=\"block text-sm mb-1 text-gray-500\">{label}</label>\r\n      <div className=\"relative inline-block text-left w-56\">\r\n        <div className=\"inline-flex justify-between w-full border-b-1 border-black shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\" id=\"options-menu\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n          <div className=\"value-container flex items-center justify-around\">\r\n            <span className=\"w-4\">{getTwoDigits(hour)}</span>\r\n            <span>:</span>\r\n            <span className=\"w-4 minutes mr-1\">{getTwoDigits(minute)}</span>\r\n            <span className=\"day-label\">{dayLabel}</span>\r\n          </div>\r\n          <svg onClick={handleSwitchDropdown} className=\"-mr-1 ml-2 h-5 w-5 cursor-pointer\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n            <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n        </div>\r\n        <transition\r\n          enter-active-class=\"transition ease-out duration-200\"\r\n          leave-active-class=\"transition ease-in duration-150\"\r\n          enter-class=\"opacity-0 translate-y-1\"\r\n          enter-to-class=\"opacity-100 translate-y-0\"\r\n          leave-class=\"opacity-100 translate-y-0\"\r\n          leave-to-class=\"opacity-0 translate-y-1\"\r\n          ref={toggleContainer}\r\n        >\r\n          <div style={{ display: isOpen ? 'block' : 'none' }} className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-10\">\r\n            <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\r\n              <div className=\"grid grid-cols-3\">\r\n                <div className=\"h-60 col-span-1 overflow-y-auto item-wrapper\" style={{ height: 200 }}>\r\n                  {[...new Array(12)].map((_, key) => (\r\n                    <SelectItem key={`h-${key}`} text={key} isActive={hour === key} onSetValue={setHour} />\r\n                  ))}\r\n                </div>\r\n                <div className=\"h-60 col-span-1 overflow-y-auto item-wrapper\" style={{ height: 200 }}>\r\n                  {[...new Array(60)].map((_, key) => (\r\n                    <SelectItem key={`m-${key}`} text={key} isActive={minute === key} onSetValue={setMinute} />\r\n                  ))}\r\n                </div>\r\n                <div className=\"h-60 col-span-1 overflow-y-auto item-wrapper\" style={{ height: 200 }}>\r\n                  <SelectItem text=\"AM\" isActive={dayLabel === 'AM'} onSetValue={setDayLabel} />\r\n                  <SelectItem text=\"PM\" isActive={dayLabel === 'PM'} onSetValue={setDayLabel} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomTimePicker.propTypes = {\r\n  label: PropTypes.string,\r\n};\r\n\r\nexport default CustomTimePicker;\r\n","export const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\nexport const weekDays = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"];\r\nexport const yearRange = 12;\r\n\r\nexport const getTwoDigits = (val) => val < 10 ? `0${val}` : val;\r\n\r\nconst isLeapYear = y => {\r\n  return ((y % 4 === 0) && (y % 100 !== 0)) || (y % 400 === 0);\r\n};\r\n\r\nexport const getDaysInMonth = (y, m) => {\r\n  return [31, isLeapYear(y) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][m];\r\n};\r\n\r\nexport const getStartWeekDay = (y, m) => {\r\n  return new Date(y, m).getDay();\r\n};\r\n\r\nexport const checkValidDate = (text) => {\r\n  for ( const char of Array.from(text) ) {\r\n    if (!(char > -1 && char < 10) && char !== '/') {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if( text.indexOf('//') > 0 || text.split('/').length !== 3 ) {\r\n    return false;\r\n  }\r\n\r\n  if ( text.split('/')[0] > 12 || text.split('/')[1] > getDaysInMonth(+text.split('/')[2], text.split('/')[0] - 1) ) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport const getColorClass = (color) => {\r\n  if (color === 'secondary') {\r\n    return 'pink-700';\r\n  } else if (color === 'primary') {\r\n    return 'indigo-700';\r\n  } else {\r\n    return 'gray-700';\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getStartWeekDay, getDaysInMonth, weekDays } from \"./helper\";\r\n\r\nexport const SelectDayPanel = ({ currentYear, currentMonth, year, month, day, onSetDate, colorClass }) => (\r\n  <div className=\"grid grid-cols-7 pb-3\">\r\n    {weekDays.map((weekDay, i) => (\r\n      <div key={`weekday-${i}`} className=\"col-span-1 text-center cursor-pointer text-gray-500 pb-3 text-sm\">{weekDay}</div>\r\n    ))}\r\n    {getStartWeekDay(currentYear, currentMonth) > 0 && (\r\n      <div className={`col-span-${getStartWeekDay(currentYear, currentMonth)}`}></div>\r\n    )}\r\n    {[...new Array(getDaysInMonth(currentYear, currentMonth))].map((_, i) => (\r\n      <div\r\n        key={`day-${i}`}\r\n        onClick={() => onSetDate(currentYear, currentMonth, i + 1)}\r\n        className=\"col-span-1 text-center py-0.5 text-sm\"\r\n      >\r\n        <button\r\n          className={`rounded-full ${(day === (i + 1) && month === currentMonth && year === currentYear) ? `bg-${colorClass} text-white` : \"hover:bg-gray-200\"}`}\r\n          style={{width: 30, height: 30, outline: 0}}\r\n        >\r\n          {i + 1}\r\n        </button>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nSelectDayPanel.propTypes = {\r\n  currentYear: PropTypes.number,\r\n  currentMonth: PropTypes.number,\r\n  year: PropTypes.number,\r\n  month: PropTypes.number,\r\n  day: PropTypes.number,\r\n  onSetDate: PropTypes.func,\r\n  colorClass: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {monthNames} from \"./helper\";\r\n\r\nexport const SelectMonthPanel = ({ currentYear, currentMonth, year, month, showedYear, onChangeCurrentMonth, colorClass }) => (\r\n  <div className=\"grid grid-cols-3\">\r\n    {monthNames.map((monthName, i) => (\r\n      <div key={`month-${i}`} className=\"col-span-1 text-center font-medium px-2 py-4\">\r\n        <button\r\n          onClick={() => onChangeCurrentMonth(i)}\r\n          className={`rounded-full ${(currentYear === year && i === month) ? `bg-${colorClass} text-white` : (showedYear === currentYear && i === currentMonth) ? \"bg-gray-200\" : \"hover:bg-gray-200\"}`}\r\n          style={{width: 70, height: 30, outline: 0}}\r\n        >\r\n          {monthName.substr(0, 3).toUpperCase()}\r\n        </button>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nSelectMonthPanel.propTypes = {\r\n  currentYear: PropTypes.number,\r\n  currentMonth: PropTypes.number,\r\n  year: PropTypes.number,\r\n  month: PropTypes.number,\r\n  showedYear: PropTypes.number,\r\n  onChangeCurrentMonth: PropTypes.func,\r\n  colorClass: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {yearRange} from \"./helper\";\r\n\r\nexport const SelectYearPanel = ({ year, showedYear, rangeStartYear, onChangeCurrentYear, colorClass }) => (\r\n  <div className=\"grid grid-cols-3\">\r\n    {[...new Array(yearRange)].map((_, i) => (\r\n      <div key={`year-${i}`} className=\"col-span-1 text-center font-medium px-2 py-4\">\r\n        <button\r\n          onClick={() => onChangeCurrentYear(i + rangeStartYear)}\r\n          className={`rounded-full ${((i + rangeStartYear) === year) ? `bg-${colorClass} text-white` : ((i + rangeStartYear) === showedYear) ? \"bg-gray-200\" : \"hover:bg-gray-200\"}`}\r\n          style={{width: 70, height: 30, outline: 0}}\r\n        >\r\n          {i + rangeStartYear}\r\n        </button>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nSelectYearPanel.propTypes = {\r\n  year: PropTypes.number,\r\n  showedYear: PropTypes.number,\r\n  rangeStartYear: PropTypes.number,\r\n  onChangeCurrentYear: PropTypes.func,\r\n  colorClass: PropTypes.string,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SelectDayPanel } from \"./SelectDayPanel\";\r\nimport { SelectMonthPanel } from \"./SelectMonthPanel\";\r\nimport { SelectYearPanel } from \"./SelectYearPanel\";\r\nimport { getTwoDigits, monthNames, yearRange, checkValidDate, getColorClass } from \"./helper\";\r\n\r\nconst CustomDatePicker = ({ label, defaultValue, color }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [year, setYear] = useState(null);\r\n  const [month, setMonth] = useState(null);\r\n  const [day, setDay] = useState(null);\r\n\r\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  const [showedYear, setShowedYear] = useState(new Date().getFullYear());\r\n  const [selectMode, setSelectMode] = useState(\"day\");\r\n  const [rangeStartYear, setRangeStartYear] = useState(new Date().getFullYear() - 10);\r\n  const [dateLabel, setDateLabel] = useState('');\r\n  const colorClass = getColorClass(color);\r\n  const toggleContainer = React.createRef();\r\n\r\n  useEffect(() => {\r\n    if (defaultValue) {\r\n      setYear(defaultValue.getFullYear());\r\n      setMonth(defaultValue.getMonth());\r\n      setDay(defaultValue.getDate());\r\n      setDateLabel(`${getTwoDigits(defaultValue.getMonth() + 1)}/${getTwoDigits(defaultValue.getDate())}/${defaultValue.getFullYear()}`);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", onClickOutsideHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", onClickOutsideHandler);\r\n    }\r\n  });\r\n\r\n  const onClickOutsideHandler = event => {\r\n    if (isOpen && toggleContainer.current && !toggleContainer.current.contains(event.target)) {\r\n      setIsOpen(false);\r\n      setSelectMode(\"day\");\r\n    }\r\n  }\r\n\r\n  const handleSwitchDropdown = () => {\r\n    if (!isOpen) {\r\n      setCurrentYear(year ? year : new Date().getFullYear());\r\n      setCurrentMonth(month >= 0 ? month : new Date().getMonth());\r\n      setRangeStartYear((year ? year : new Date().getFullYear()) - 10)\r\n    }\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (selectMode === \"day\") {\r\n      if (currentMonth === 0) {\r\n        setCurrentMonth(11);\r\n        setCurrentYear(currentYear - 1);\r\n        setShowedYear(currentYear);\r\n      } else {\r\n        setCurrentMonth(currentMonth - 1);\r\n      }\r\n    } else if (selectMode === \"month\") {\r\n      setCurrentYear(currentYear - 1);\r\n    } else if (selectMode === \"year\") {\r\n      setRangeStartYear(rangeStartYear - yearRange);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (selectMode === \"day\") {\r\n      if (currentMonth === 11) {\r\n        setCurrentMonth(0);\r\n        setCurrentYear(currentYear + 1);\r\n        setShowedYear(currentYear);\r\n      } else {\r\n        setCurrentMonth(currentMonth + 1);\r\n      }\r\n    } else if (selectMode === \"month\") {\r\n      setCurrentYear(currentYear + 1);\r\n    } else if (selectMode === \"year\") {\r\n      setRangeStartYear(rangeStartYear + yearRange);\r\n    }\r\n  };\r\n\r\n  const setDate = (y, m, d) => {\r\n    setYear(y);\r\n    setMonth(m);\r\n    setDay(d);\r\n    setDateLabel(`${getTwoDigits(m + 1)}/${getTwoDigits(d)}/${y}`);\r\n    handleSwitchDropdown();\r\n  };\r\n\r\n  const setDateFromTextInput = (text) => {\r\n    if (checkValidDate(text)) {\r\n      setYear(+text.split('/')[2]);\r\n      setMonth(text.split('/')[0] - 1);\r\n      setDay(+text.split('/')[1]);\r\n      setDateLabel(`${getTwoDigits(+text.split('/')[0])}/${getTwoDigits(+text.split('/')[1])}/${+text.split('/')[2]}`);\r\n    } else {\r\n      setYear();\r\n      setMonth();\r\n      setDay();\r\n      setDateLabel(\"\");\r\n    }\r\n  };\r\n\r\n  const changeCurrentMonth = m => {\r\n    setCurrentMonth(m);\r\n    setShowedYear(currentYear);\r\n    setSelectMode(\"day\");\r\n  };\r\n\r\n  const changeCurrentYear = y => {\r\n    setCurrentYear(y);\r\n    setSelectMode(\"month\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto p-6 bg-gray-100 rounded-lg shadow-xl\">\r\n      <label className=\"block text-sm mb-1 text-gray-500\">{label}</label>\r\n      <div className=\"relative inline-block text-left w-56\">\r\n        <div\r\n          className=\"inline-flex justify-between items-center w-full border-b-1 border-black shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\"\r\n          aria-haspopup=\"true\" aria-expanded=\"true\"\r\n        >\r\n          <input onBlur={() => setDateFromTextInput(event.target.value)} onChange={() => setDateLabel(event.target.value)} value={dateLabel} placeholder=\"MM/dd/YYYY\" type=\"text\" className=\"w-full h-full font-semibold hover:bg-gray-50 focus:outline-none px-4 py-2\" />\r\n          <button onClick={handleSwitchDropdown} className=\"absolute right-4 focus:outline-none\">\r\n            <svg\r\n              className=\"-mr-1 ml-2 h-5 w-5 cursor-pointer\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"currentColor\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <path d=\"M19,19H5V8H19M16,1V3H8V1H6V3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3H18V1M17,12H12V17H17V12Z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <transition\r\n          enter-active-class=\"transition ease-out duration-200\"\r\n          leave-active-class=\"transition ease-in duration-150\"\r\n          enter-class=\"opacity-0 translate-y-1\"\r\n          enter-to-class=\"opacity-100 translate-y-0\"\r\n          leave-class=\"opacity-100 translate-y-0\"\r\n          leave-to-class=\"opacity-0 translate-y-1\"\r\n          ref={toggleContainer}\r\n        >\r\n          <div\r\n            style={{display: isOpen ? \"block\" : \"none\"}}\r\n            className=\"origin-top-right absolute right-0 mt-2 w-72 rounded-md shadow-lg bg-white shadow-xl ring-1 ring-black ring-opacity-5 px-4 z-10\"\r\n          >\r\n            <div className=\"py-1\">\r\n              <div className=\"flex justify-between py-4\">\r\n                <button onClick={handlePrev}  className=\"focus:outline-none hover:bg-gray-200 rounded-full p-1\">\r\n                  <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <g\r\n                      id=\"Stockholm-icons-/-Navigation-/-Angle-left\"\r\n                      stroke=\"none\"\r\n                      strokeWidth=\"1\"\r\n                      fill=\"none\"\r\n                      fillRule=\"evenodd\"\r\n                    >\r\n                      <polygon points=\"0 0 24 0 24 24 0 24\"></polygon>\r\n                      <path\r\n                        d=\"M6.70710678,15.7071068 C6.31658249,16.0976311 5.68341751,16.0976311 5.29289322,15.7071068 C4.90236893,15.3165825 4.90236893,14.6834175 5.29289322,14.2928932 L11.2928932,8.29289322 C11.6714722,7.91431428 12.2810586,7.90106866 12.6757246,8.26284586 L18.6757246,13.7628459 C19.0828436,14.1360383 19.1103465,14.7686056 18.7371541,15.1757246 C18.3639617,15.5828436 17.7313944,15.6103465 17.3242754,15.2371541 L12.0300757,10.3841378 L6.70710678,15.7071068 Z\"\r\n                        id=\"Path-94\" fill=\"#000000\" fillRule=\"nonzero\"\r\n                        transform=\"translate(12.000003, 11.999999) scale(-1, 1) rotate(-270.000000) translate(-12.000003, -11.999999) \">\r\n                      </path>\r\n                    </g>\r\n                  </svg>\r\n                </button>\r\n\r\n                <p className=\"text-lg py-0.5 px-4 hover:bg-gray-200 rounded-full\">\r\n                  {selectMode === \"day\" && <span className=\"cursor-pointer\" onClick={() => setSelectMode(\"month\")}>{monthNames[currentMonth]} {currentYear}</span>}\r\n                  {selectMode === \"month\" && <span className=\"cursor-pointer\" onClick={() => setSelectMode(\"year\")}>{currentYear}</span>}\r\n                  {selectMode === \"year\" && <span className=\"cursor-pointer\" onClick={() => setSelectMode(\"day\")}>{rangeStartYear} - {rangeStartYear + yearRange - 1}</span>}\r\n                </p>\r\n\r\n                <button onClick={handleNext} className=\"focus:outline-none hover:bg-gray-200 rounded-full p-1\">\r\n                  <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <g id=\"Stockholm-icons-/-Navigation-/-Angle-right\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n                      <polygon points=\"0 0 24 0 24 24 0 24\"></polygon>\r\n                      <path\r\n                        d=\"M6.70710678,15.7071068 C6.31658249,16.0976311 5.68341751,16.0976311 5.29289322,15.7071068 C4.90236893,15.3165825 4.90236893,14.6834175 5.29289322,14.2928932 L11.2928932,8.29289322 C11.6714722,7.91431428 12.2810586,7.90106866 12.6757246,8.26284586 L18.6757246,13.7628459 C19.0828436,14.1360383 19.1103465,14.7686056 18.7371541,15.1757246 C18.3639617,15.5828436 17.7313944,15.6103465 17.3242754,15.2371541 L12.0300757,10.3841378 L6.70710678,15.7071068 Z\"\r\n                        id=\"Path-94\" fill=\"#000000\" fillRule=\"nonzero\"\r\n                        transform=\"translate(12.000003, 11.999999) rotate(-270.000000) translate(-12.000003, -11.999999) \">\r\n                      </path>\r\n                    </g>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              {selectMode === \"day\" && (\r\n                <SelectDayPanel\r\n                  currentYear={currentYear}\r\n                  currentMonth={currentMonth}\r\n                  year={year}\r\n                  month={month}\r\n                  day={day}\r\n                  colorClass={colorClass}\r\n                  onSetDate={setDate} />\r\n              )}\r\n\r\n              {selectMode === \"month\" && (\r\n                <SelectMonthPanel\r\n                  currentYear={currentYear}\r\n                  currentMonth={currentMonth}\r\n                  year={year}\r\n                  month={month}\r\n                  showedYear={showedYear}\r\n                  colorClass={colorClass}\r\n                  onChangeCurrentMonth={changeCurrentMonth} />\r\n              )}\r\n\r\n              {selectMode === \"year\" && (\r\n                <SelectYearPanel\r\n                  year={year}\r\n                  showedYear={showedYear}\r\n                  rangeStartYear={rangeStartYear}\r\n                  colorClass={colorClass}\r\n                  onChangeCurrentYear={changeCurrentYear} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomDatePicker.propTypes = {\r\n  label: PropTypes.string,\r\n  defaultValue: PropTypes.object,\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default CustomDatePicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getSizeClass = (size) => {\r\n  if (size === 'small') {\r\n    return 'text-xs px-2.5 py-1.5';\r\n  } else if (size === 'medium') {\r\n    return 'text-sm px-3 py-2';\r\n  } else {\r\n    return 'text-base px-4 py-2';\r\n  }\r\n};\r\n\r\nconst getColorClass = (color) => {\r\n  if (color === 'secondary') {\r\n    return 'text-indigo-700 bg-indigo-100 hover:bg-indigo-200';\r\n  } else if (color === 'primary') {\r\n    return 'text-white bg-indigo-600 hover:bg-indigo-700';\r\n  } else {\r\n    return 'text-gray-700 bg-white hover:bg-gray-50 border-gray-300';\r\n  }\r\n};\r\n\r\nconst CustomButton = ({ label, size, color }) => {\r\n  const sizeClass = getSizeClass(size);\r\n  const colorClass = getColorClass(color);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={`inline-flex items-center ${sizeClass} ${colorClass} border border-transparent font-medium rounded shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500`}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  label: PropTypes.string,\r\n  size: PropTypes.string,\r\n  color: PropTypes.string,\r\n};\r\n\r\nCustomButton.defaultProps = {\r\n  label: '',\r\n  size: 'small',\r\n  color: 'default',\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getSizeClass = (size) => {\r\n  if (size === 'small') {\r\n    return 'text-xs px-2.5 py-1.5';\r\n  } else if (size === 'medium') {\r\n    return 'text-sm px-3 py-2';\r\n  } else {\r\n    return 'text-base px-4 py-2';\r\n  }\r\n};\r\n\r\nconst getVariantClass = (variant) => {\r\n  if (variant === 'outlined') {\r\n    return 'text-gray-700 bg-white hover:bg-gray-50 border-indigo-700';\r\n  } else if (variant === 'contained') {\r\n    return 'text-white bg-indigo-500 hover:bg-indigo-700 border-indigo-500';\r\n  } else {\r\n    return 'text-gray-700 bg-white hover:bg-gray-50';\r\n  }\r\n};\r\n\r\nconst CustomButtonGroup = ({ label, size, variant }) => {\r\n  const sizeClass = getSizeClass(size);\r\n  const themeClass = getVariantClass(variant);\r\n\r\n  return (\r\n    <span className=\"relative z-0 inline-flex shadow-sm rounded-md\">\r\n      <button type=\"button\" className={`relative inline-flex items-center ${sizeClass} ${themeClass} rounded-l-md border focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 ${variant === 'text' ? 'border-none' : ''}`}>\r\n        {label[0]}\r\n      </button>\r\n      <button type=\"button\" className={`-ml-px relative inline-flex items-center ${sizeClass} ${themeClass} border focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 ${variant === 'text' ? 'border-l border-indigo-300 border-t-0 border-b-0 border-r-0' : ''}`}>\r\n        {label[1]}\r\n      </button>\r\n      <button type=\"button\" className={`-ml-px relative inline-flex items-center ${sizeClass} ${themeClass} rounded-r-md border focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 ${variant === 'text' ? 'border-l border-indigo-300 border-t-0 border-b-0 border-r-0' : ''}`}>\r\n        {label[2]}\r\n      </button>\r\n    </span>\r\n  );\r\n};\r\n\r\nCustomButtonGroup.propTypes = {\r\n  label: PropTypes.array,\r\n  size: PropTypes.string,\r\n  variant: PropTypes.string,\r\n};\r\n\r\nCustomButtonGroup.defaultProps = {\r\n  label: '',\r\n  size: 'small',\r\n  variant: 'text',\r\n};\r\n\r\nexport default CustomButtonGroup;\r\n","import React, { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getColorClass = (color) => {\r\n  if (color === 'secondary') {\r\n    return 'pink-700';\r\n  } else if (color === 'primary') {\r\n    return 'indigo-700';\r\n  } else {\r\n    return 'gray-700';\r\n  }\r\n};\r\n\r\nconst CustomSlider = ({ defaultValue, color }) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const [draggable, setDraggable] = useState(false);\r\n  const [hoverOnCircle, setHoverOnCircle] = useState(false);\r\n  const sliderRef = useRef(null);\r\n  const colorClass = getColorClass(color);\r\n\r\n  const getValue = e => {\r\n    const sliderWidth = sliderRef.current.clientWidth;\r\n    const offsetX = Math.abs(e.clientX - sliderRef.current.offsetLeft);\r\n    return Math.min(offsetX/sliderWidth * 100, 100);\r\n  };\r\n\r\n  const handleClickBar = e => {\r\n    setDraggable(true);\r\n    setValue(getValue(e));\r\n  };\r\n\r\n  const handleMoveOnBar = e => {\r\n    draggable && setValue(getValue(e));\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-40\">\r\n      <span\r\n        ref={sliderRef}\r\n        className={`w-full h-0.5 py-3.5 px-0 cursor-pointer inline-block relative box-content text-${colorClass}`}\r\n        onMouseDown={handleClickBar}\r\n        onMouseMove={handleMoveOnBar}\r\n        onMouseUp={() => setDraggable(false)}\r\n      >\r\n        <span className=\"w-full h-0.5 block opacity-40 absolute rounded bg-current\" />\r\n        <span className=\"h-0.5 block absolute rounded bg-current\" style={{ width: `${value}%` }} />\r\n        <input type=\"hidden\" value={value} />\r\n        <span\r\n          className=\"w-3.5 h-3.5 flex outline-none absolute box-border -mt-1.5 shadow-sm items-center -ml-1.5 rounded-full justify-center bg-current\"\r\n          style={{ left: `${value}%`, boxShadow: hoverOnCircle ? '0px 0px 0px 8px rgba(25, 118, 210, 0.16)' : '' }}\r\n          onMouseDown={() => setDraggable(true)}\r\n          onMouseUp={() => setDraggable(false)}\r\n          onMouseEnter={() => setHoverOnCircle(true)}\r\n          onMouseOut={() => setHoverOnCircle(false)}\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomSlider.propTypes = {\r\n  defaultValue: PropTypes.number,\r\n  color: PropTypes.string,\r\n};\r\n\r\nCustomSlider.defaultProps = {\r\n  defaultValue: 0,\r\n  color: 'default',\r\n};\r\n\r\nexport default CustomSlider;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getColorClass = (color, isOn) => {\r\n  if (!isOn) {\r\n    return 'gray-200';\r\n  } else if (color === 'secondary') {\r\n    return 'pink-600';\r\n  } else if (color === 'primary') {\r\n    return 'indigo-600';\r\n  } else {\r\n    return 'gray-600';\r\n  }\r\n};\r\n\r\nconst CustomSwitch = ({ defaultValue, label, color }) => {\r\n  const [isOn, setIsOn] = useState(defaultValue);\r\n  const colorClass = getColorClass(color, isOn);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      aria-pressed=\"false\"\r\n      className={`flex-shrink-0 group relative rounded-full inline-flex items-center justify-center h-5 w-10 cursor-pointer focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-${colorClass}`}\r\n      onClick={() => setIsOn(!isOn)}\r\n    >\r\n      <span className=\"sr-only\">{label}</span>\r\n      <span aria-hidden=\"true\" className={`bg-${colorClass} absolute h-4 w-9 mx-auto rounded-full transition-colors ease-in-out duration-200`}></span>\r\n      <span aria-hidden=\"true\" className={`${isOn ? 'translate-x-5' : 'translate-x-0'} absolute left-0 inline-block h-5 w-5 border border-gray-200 rounded-full bg-white shadow transform ring-0 transition-transform ease-in-out duration-200`}></span>\r\n    </button>\r\n  );\r\n};\r\n\r\nCustomSwitch.propTypes = {\r\n  defaultValue: PropTypes.bool,\r\n  label: PropTypes.string,\r\n  color: PropTypes.string,\r\n};\r\n\r\nCustomSwitch.defaultProps = {\r\n  defaultValue: false,\r\n  label: '',\r\n  color: 'default',\r\n};\r\n\r\nexport default CustomSwitch;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SimpleList = ({ simpleListData }) => {\r\n    return (\r\n        <div className=\"w-full bg-white flex flex-col\">\r\n            <ul className=\"w-full border-b border-gray-400 py-2\">\r\n                {simpleListData.listWithIcon.map((item, i) =>\r\n                    <li key={i} className=\"w-full flex flex-row justify-start items-center px-4 h-14 hover:bg-gray-100 cursor-pointer\">\r\n                        <img src={item.icon} className=\"w-6 h-6\" alt=\"icon\" />\r\n                        <p className=\"pl-8 text-lg font-sans\">{item.name}</p>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            <ul className=\"w-full py-2\">\r\n                {simpleListData.listWithoutIcon.map((item, i) =>\r\n                    <li key={i} className=\"w-full flex flex-row justify-start items-center px-4 h-14 hover:bg-gray-100 cursor-pointer\">\r\n                        <p className=\"text-lg font-sans\">{item}</p>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nSimpleList.propTypes = {\r\n    simpleListData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SimpleList;\r\n","export default __webpack_public_path__ + \"static/media/arrow-up.d1cc8e36.svg\";","export default __webpack_public_path__ + \"static/media/arrow-down.a060a4cb.svg\";","import React, { useState } from 'react';\r\nimport ArrowUpIcon from '../../assets/images/arrow-up.svg';\r\nimport ArrowDownIcon from '../../assets/images/arrow-down.svg';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ListItem = ({ itemData }) => {\r\n    const [subList, setSubList] = useState(false);\r\n    return (\r\n        <li className=\"w-full flex flex-col\">\r\n            <div\r\n                onClick={itemData.subList ? () => setSubList(!subList) : null}\r\n                className=\"flex flex-row items-center justify-between w-full px-4 hover:bg-gray-100 cursor-pointer h-14\">\r\n                <div className=\"flex flex-row items-center\">\r\n                    <img src={itemData.icon} className=\"w-6 h-6\" alt=\"icon\" />\r\n                    <p className=\"pl-8 text-lg font-sans\">{itemData.name}</p>\r\n                </div>\r\n                {itemData.subList && <img src={subList ? ArrowUpIcon : ArrowDownIcon} className=\"w-4 h-4\" alt=\"icon\" />}\r\n            </div>\r\n            {subList &&\r\n                <ul>\r\n                    {itemData.subList.map((item, i) =>\r\n                        <li key={i} className=\"flex items-center hover:bg-gray-100 h-14 pl-10 cursor-pointer\">\r\n                            <img src={item.icon} className=\"w-6 h-6\" alt=\"icon\" />\r\n                            <p className=\"pl-8 text-lg font-sans\">{item.name}</p>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\nListItem.propTypes = {\r\n    itemData: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { ListItem } from './listItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const NestedList = ({ nestedListData }) => {\r\n    return (\r\n        <ul className=\"w-full py-2 bg-white\">\r\n            <p className=\"px-4 py-2 text-gray-700\">Nested List Items</p>\r\n            {nestedListData.map((item, i) =>\r\n                <ListItem key={i} itemData={item} />\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nNestedList.propTypes = {\r\n    nestedListData: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default NestedList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FolderList = ({ folderListData }) => {\r\n    return (\r\n        <ul className=\"w-full bg-white px-4 py-4\">\r\n            {folderListData.map((item, i) =>\r\n                <li key={i} className=\"flex flex-row items-center py-2\">\r\n                    <div className=\"w-10 h-10 bg-gray-400 flex justify-center items-center rounded-full\">\r\n                        <img src={item.icon} className=\"w-5 h-5\" alt=\"icon\" />\r\n                    </div>\r\n                    <div className=\"flex flex-col pl-4\">\r\n                        <p className=\"text-lg font-sans leading-6 text-gray-700\">{item.name}</p>\r\n                        <p className=\"text-base text-gray-400 font-sans leading-5\">{item.date}</p>\r\n                    </div>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nFolderList.propTypes = {\r\n    folderListData: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FolderList;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getColorClass = (color) => {\r\n  if (color === 'secondary') {\r\n    return 'pink';\r\n  } else if (color === 'primary') {\r\n    return 'indigo';\r\n  } else {\r\n    return 'gray';\r\n  }\r\n};\r\n\r\nconst getVariantClass = (colorClass, variant) => {\r\n  if (variant === 'outlined') {\r\n    return `py-2 px-3 shadow-sm focus:outline-none focus:ring-2 focus:ring-${colorClass}-500 focus:border-${colorClass}-500 block w-full sm:text-sm rounded-md`;\r\n  } else {\r\n    return `py-2 px-3 shadow-sm border-solid border-b-2 focus:outline-none focus:border-b-2 focus:border-${colorClass}-500 block w-full sm:text-sm`;\r\n  }\r\n};\r\n\r\nconst CustomTextField = ({ defaultValue, color, variant }) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const colorClass = getColorClass(color);\r\n  const variantClass = getVariantClass(colorClass, variant);\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n      <div className=\"mt-1\">\r\n        <input\r\n          type=\"text\"\r\n          className={variantClass}\r\n          placeholder=\"you@example.com\"\r\n          value={value}\r\n          onChange={() => setValue(event.target.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomTextField.propTypes = {\r\n  defaultValue: PropTypes.string,\r\n  color: PropTypes.string,\r\n  variant: PropTypes.string,\r\n};\r\n\r\nCustomTextField.defaultProps = {\r\n  defaultValue: '',\r\n  color: 'default',\r\n  variant: '',\r\n};\r\n\r\nexport default CustomTextField;\r\n","import React  from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SelectOption = ({ label, value, selectedValue, onSetValue, colorClass }) => (\r\n  <li id=\"listbox-option-0\" role=\"option\" className=\"text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9\" onClick={() => onSetValue(value)}>\r\n    <span className={`font-${value === selectedValue ? \"bold\" : \"normal\"} block truncate`}>{label}</span>\r\n\r\n    {value === selectedValue &&\r\n    <span className={`text-${colorClass}-600 absolute inset-y-0 right-0 flex items-center pr-4`}>\r\n      <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n        <path fillRule=\"evenodd\"\r\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n              clipRule=\"evenodd\"/>\r\n      </svg>\r\n    </span>\r\n    }\r\n  </li>\r\n);\r\n\r\nSelectOption.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.any,\r\n  selectedValue: PropTypes.any,\r\n  onSetValue: PropTypes.func,\r\n  colorClass: PropTypes.string,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SelectOption } from \"./SelectOption\";\r\n\r\nconst getColorClass = (color) => {\r\n  if (color === 'secondary') {\r\n    return 'pink';\r\n  } else if (color === 'primary') {\r\n    return 'indigo';\r\n  } else {\r\n    return 'gray';\r\n  }\r\n};\r\n\r\nconst getVariantClass = (colorClass, variant) => {\r\n  if (variant === 'outlined') {\r\n    return `bg-white relative w-full h-10 border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-${colorClass}-500 focus:border-${colorClass}-500 sm:text-sm`;\r\n  } else {\r\n    return `bg-white relative w-full h-10 border-b-2 border-transparent shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none border-solid border-transparent focus:border-${colorClass}-500 sm:text-sm`;\r\n  }\r\n};\r\n\r\nconst CustomSelectBox = ({ label, defaultValue, options, variant, color }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [value, setValue] = useState(defaultValue);\r\n  const colorClass = getColorClass(color);\r\n  const variantClass = getVariantClass(colorClass, variant);\r\n  const toggleContainer = React.createRef();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", onClickOutsideHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", onClickOutsideHandler);\r\n    }\r\n  });\r\n\r\n  const onClickOutsideHandler = event => {\r\n    if (isOpen && toggleContainer.current && !toggleContainer.current.contains(event.target)) {\r\n      setIsOpen(false);\r\n    }\r\n  }\r\n\r\n  const handleSwitchDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleSetValue = (v) => {\r\n    setValue(v);\r\n    setIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full mx-1\">\r\n      <label id=\"listbox-label\" className=\"block text-sm font-medium text-gray-700\">{label}</label>\r\n      <div className=\"mt-1 w-full relative\">\r\n        <button onClick={handleSwitchDropdown} type=\"button\" aria-haspopup=\"listbox\" aria-expanded=\"true\"\r\n                aria-labelledby=\"listbox-label\"\r\n                style={{minWidth: '150px'}}\r\n                className={variantClass}>\r\n          <span className=\"block truncate w-100\">\r\n            {value}\r\n          </span>\r\n          <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n            <svg className=\"h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"\r\n                 fill=\"currentColor\" aria-hidden=\"true\">\r\n              <path fillRule=\"evenodd\"\r\n                    d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\r\n                    clipRule=\"evenodd\"/>\r\n            </svg>\r\n          </span>\r\n        </button>\r\n\r\n        <div style={{display: isOpen ? 'block' : 'none'}} ref={toggleContainer}\r\n             className=\"absolute mt-1 w-full rounded-md bg-white shadow-lg z-10\">\r\n          <ul tabIndex=\"-1\" role=\"listbox\" aria-labelledby=\"listbox-label\" aria-activedescendant=\"listbox-item-3\"\r\n              className=\"max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\r\n            {options && options.map((option, i) => (\r\n              <SelectOption key={`option-${i}`} label={option} value={option} selectedValue={value}\r\n                            onSetValue={handleSetValue} colorClass={colorClass}/>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomSelectBox.propTypes = {\r\n  label: PropTypes.string,\r\n  defaultValue: PropTypes.any,\r\n  options: PropTypes.array,\r\n  color: PropTypes.string,\r\n  variant: PropTypes.string,\r\n};\r\n\r\nCustomSelectBox.defaultProps = {\r\n  defaultValue: '',\r\n  options: [],\r\n  color: 'default',\r\n  variant: '',\r\n};\r\n\r\nexport default CustomSelectBox;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getColorClass = (color) => {\r\n  if (color === 'secondary') {\r\n    return 'pink';\r\n  } else if (color === 'primary') {\r\n    return 'indigo';\r\n  } else {\r\n    return 'gray';\r\n  }\r\n};\r\n\r\nexport const LinearProgressBar = ({ defaultValue, color, withLabel }) => {\r\n  const [width, setWidth] = useState(0);\r\n  const colorClass = getColorClass(color);\r\n\r\n  useEffect(() => {\r\n    setWidth(defaultValue);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex items-center px-1 w-full\">\r\n      <div className={`flex-1 h-1.5 bg-${colorClass}-300 my-2`}>\r\n        <div className={`h-full bg-${colorClass}-700`}\r\n             style={{\r\n               transition: `all 0.4s ease`,\r\n               width: `${width}%`\r\n             }}\r\n        >\r\n        </div>\r\n      </div>\r\n      {withLabel && <span className=\"pl-2 text-gray-500\">{defaultValue}%</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nLinearProgressBar.propTypes = {\r\n  defaultValue: PropTypes.number,\r\n  color: PropTypes.string,\r\n  withLabel: PropTypes.bool\r\n};\r\n\r\nLinearProgressBar.defaultProps = {\r\n  defaultValue: 0,\r\n  color: 'default',\r\n  withLabel: false\r\n};\r\n\r\nexport default LinearProgressBar;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getColor = (color) => {\r\n  if (color === 'primary') {\r\n    return '#4338ca';\r\n  } else if (color === 'secondary') {\r\n    return '#be185d';\r\n  } else {\r\n    return '#374151';\r\n  }\r\n};\r\n\r\nconst CircularProgressBar = ({ defaultValue, radius, lineWidth, color, withLabel }) => {\r\n  const [value, setValue] = useState(0);\r\n  const canvas = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (value < defaultValue) {\r\n      setTimeout(() => {\r\n        setValue(value + defaultValue / 30)\r\n        let ctx = canvas.current.getContext(\"2d\");\r\n        ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\r\n        drawCircle(ctx);\r\n        withLabel && drawText(ctx);\r\n      });\r\n    } else {\r\n      setValue(defaultValue);\r\n      let ctx = canvas.current.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\r\n      drawCircle(ctx);\r\n      withLabel && drawText(ctx);\r\n    }\r\n  }, [value]);\r\n\r\n  const drawCircle = (ctx) => {\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.strokeStyle = getColor(color);\r\n    ctx.beginPath();\r\n    ctx.arc(radius, radius, radius - lineWidth, -0.5 * Math.PI, Math.PI * (2 * value / 100 - 0.5));\r\n    ctx.stroke();\r\n  };\r\n\r\n  const drawText = (ctx) => {\r\n    ctx.fillStyle = \"#6b7280\";\r\n    ctx.font = `15px 'Segoe UI'`;\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    ctx.fillText(`${value.toFixed(0)}%`, canvas.current.width/2, canvas.current.height/2);\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-indigo-700 stroke-current\">\r\n      <canvas ref={canvas} width={2 * radius} height={2 * radius}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nCircularProgressBar.propTypes = {\r\n  radius: PropTypes.number,\r\n  defaultValue: PropTypes.number,\r\n  lineWidth: PropTypes.number,\r\n  color: PropTypes.string,\r\n  withLabel: PropTypes.bool\r\n};\r\n\r\nCircularProgressBar.defaultProps = {\r\n  radius: 30,\r\n  defaultValue: 0,\r\n  lineWidth: 5,\r\n  color: 'default',\r\n  withLabel: false\r\n};\r\n\r\nexport default CircularProgressBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getTypeClass = (type) => {\r\n  if (type === 'error') {\r\n    return 'bg-red-700';\r\n  } else if (type === 'warning') {\r\n    return 'bg-yellow-700';\r\n  } else if (type === 'success') {\r\n    return 'bg-green-700';\r\n  } else {\r\n    return 'bg-blue-600';\r\n  }\r\n};\r\n\r\nconst getIcon = (type) => {\r\n  if (type === 'error') {\r\n    return <svg className=\"w-4 h-4 mr-2\" viewBox=\"64 64 896 896\" xmlns=\"http://www.w3.org/2000/svg\">\r\n             <path fill=\"white\" d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" />\r\n             <path fill=\"white\" d=\"M464 688a48 48 0 1096 0 48 48 0 10-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z\" />\r\n           </svg>\r\n  } else if (type === 'warning') {\r\n    return <svg className=\"w-4 h-4 mr-2\" viewBox=\"64 64 896 896\" xmlns=\"http://www.w3.org/2000/svg\">\r\n             <path fill=\"white\" d=\"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\"/>\r\n           </svg>;\r\n  } else if (type === 'success') {\r\n    return <svg className=\"w-4 h-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n             <path fill=\"white\" d=\"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 48c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m140.204 130.267l-22.536-22.718c-4.667-4.705-12.265-4.736-16.97-.068L215.346 303.697l-59.792-60.277c-4.667-4.705-12.265-4.736-16.97-.069l-22.719 22.536c-4.705 4.667-4.736 12.265-.068 16.971l90.781 91.516c4.667 4.705 12.265 4.736 16.97.068l172.589-171.204c4.704-4.668 4.734-12.266.067-16.971z\"/>\r\n           </svg>;\r\n  } else {\r\n    return <svg className=\"w-4 h-4 mr-2\" viewBox=\"64 64 896 896\" xmlns=\"http://www.w3.org/2000/svg\">\r\n             <path fill=\"white\" d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"/>\r\n             <path fill=\"white\" d=\"M464 336a48 48 0 1096 0 48 48 0 10-96 0zm72 112h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V456c0-4.4-3.6-8-8-8z\"/>\r\n           </svg>;\r\n  }\r\n}\r\n\r\nconst getPositionStyle = (anchorOrigin) => {\r\n  if (anchorOrigin.vertical === \"top\") {\r\n    if (anchorOrigin.horizontal === \"left\") {\r\n      return {\r\n        top: 24,\r\n        left: 24,\r\n        right: 'auto'\r\n      };\r\n    } else if (anchorOrigin.horizontal === \"center\") {\r\n      return {\r\n        top: 24,\r\n        left: '50%',\r\n        right: 'auto',\r\n        transform: 'translateX(-50%)'\r\n      };\r\n    } else {\r\n      return {\r\n        top: 24,\r\n        right: 24,\r\n        left: 'auto'\r\n      };\r\n    }\r\n  } else {\r\n    if (anchorOrigin.horizontal === \"left\") {\r\n      return {\r\n        bottom: 24,\r\n        left: 24,\r\n        right: 'auto'\r\n      };\r\n    } else if (anchorOrigin.horizontal === \"center\") {\r\n      return {\r\n        bottom: 24,\r\n        left: '50%',\r\n        right: 'auto',\r\n        transform: 'translateX(-50%)'\r\n      };\r\n    } else {\r\n      return {\r\n        bottom: 24,\r\n        right: 24,\r\n        left: 'auto'\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nconst CustomSnackbar = ({ isOpen, message, type, anchorOrigin, onClose }) => {\r\n  const [opacity, setOpacity] = useState(0);\r\n  const [transform, setTransform] = useState(\"scale(0.75, 0.5625)\");\r\n  const typeClass = getTypeClass(type);\r\n  const positionStyle = getPositionStyle(anchorOrigin);\r\n  const icon = getIcon(type);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setOpacity(1);\r\n      setTransform(\"none\");\r\n    } else {\r\n      setOpacity(0);\r\n      setTransform(\"scale(0.75, 0.5625)\");\r\n    }\r\n  }, [isOpen]);\r\n\r\n\r\n  return (\r\n    <>\r\n      {isOpen &&\r\n      <div className=\"fixed z-50\" style={positionStyle}>\r\n        <div className={`${typeClass} text-white rounded-sm w-60 min-w-max py-2 px-4`}\r\n             style={{\r\n               opacity: opacity,\r\n               transform: transform,\r\n               transition: 'opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n             }}>\r\n          <div className=\"flex items-center text-white\">\r\n            {icon}\r\n            <span className=\"flex-1\">{message}</span>\r\n            <button onClick={onClose}>\r\n              <svg className=\"text-white w-4\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\"\r\n                   height=\"20\" viewBox=\"0 0 20 20\">\r\n                <path\r\n                  d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"\r\n                  fill=\"white\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nCustomSnackbar.propTypes = {\r\n  message: PropTypes.any,\r\n  type: PropTypes.string,\r\n  anchorOrigin: PropTypes.object,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nCustomSnackbar.defaultProps = {\r\n  message: 'I love snackbar',\r\n  type: 'information',\r\n  anchorOrigin: { vertical: \"top\", horizontal: \"center\" },\r\n  isOpen: false\r\n};\r\n\r\nexport default CustomSnackbar;\r\n","import React, { useState } from 'react';\r\nimport CustomSnackbar from \"../CustomSnackbar\";\r\n\r\nconst types = [\"error\", \"success\", \"information\", \"warning\"];\r\n\r\nconst SnackbarExample = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [type, setType] = useState(\"information\");\r\n  const [vertical, setVertical] = useState(\"top\");\r\n  const [horizontal, setHorizontal] = useState(\"center\");\r\n\r\n  const handleClick = (v, h) => {\r\n    setType(types[types.indexOf(type) + 1]);\r\n    setIsOpen(!isOpen);\r\n    setVertical(v);\r\n    setHorizontal(h);\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <button className=\"inline-flex items-center border border-transparent font-medium rounded bg-gray-300 p-2 m-2\" onClick={() => handleClick(\"top\", \"center\")}>TOP-CENTER</button>\r\n      <button className=\"inline-flex items-center border border-transparent font-medium rounded bg-gray-300 p-2 m-2\" onClick={() => handleClick(\"top\", \"right\")}>TOP-RIGHT</button>\r\n      <button className=\"inline-flex items-center border border-transparent font-medium rounded bg-gray-300 p-2 m-2\" onClick={() => handleClick(\"bottom\", \"right\")}>BOTTOM-RIGHT</button>\r\n      <button className=\"inline-flex items-center border border-transparent font-medium rounded bg-gray-300 p-2 m-2\" onClick={() => handleClick(\"bottom\", \"center\")}>BOTTOM-CENTER</button>\r\n      <button className=\"inline-flex items-center border border-transparent font-medium rounded bg-gray-300 p-2 m-2\" onClick={() => handleClick(\"bottom\", \"left\")}>BOTTOM-LEFT</button>\r\n      <button className=\"inline-flex items-center border border-transparent font-medium rounded bg-gray-300 p-2 m-2\" onClick={() => handleClick(\"top\", \"left\")}>TOP-LEFT</button>\r\n      <CustomSnackbar\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        isOpen={isOpen}\r\n        type={type}\r\n        onClose={() => setIsOpen(false)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnackbarExample;\r\n","export default __webpack_public_path__ + \"static/media/inbox.599e9c9c.svg\";","export default __webpack_public_path__ + \"static/media/drafts.35725719.svg\";","export default __webpack_public_path__ + \"static/media/send-mail.1a4bd0d8.svg\";","export default __webpack_public_path__ + \"static/media/photo.eddd133c.svg\";","import InboxIcon from './assets/images/inbox.svg';\r\nimport DraftsIcon from './assets/images/drafts.svg';\r\nimport EmailSentIcon from './assets/images/send-mail.svg';\r\nimport PhotoIcon from './assets/images/photo.svg';\r\nimport StarIcon from './assets/images/star.svg';\r\nimport InboxWorkIcon from './assets/images/inbox-work.svg';\r\nimport DraftsWorkIcon from './assets/images/drafts-work.svg';\r\n\r\nexport const listData = {\r\n    simpleListData: {\r\n        listWithIcon: [\r\n            {\r\n                name: 'Inbox',\r\n                icon: InboxIcon,\r\n            }, {\r\n                name: 'Drafts',\r\n                icon: DraftsIcon,\r\n            }\r\n        ],\r\n        listWithoutIcon: ['Trash', 'Spam'],\r\n    },\r\n    nestedListData: [\r\n        {\r\n            name: 'Sent Mail',\r\n            icon: EmailSentIcon,\r\n        }, {\r\n            name: 'Drafts',\r\n            icon: DraftsIcon,\r\n        }, {\r\n            name: 'Inbox',\r\n            icon: InboxIcon,\r\n            subList: [\r\n                {\r\n                    name: 'Starred',\r\n                    icon: StarIcon,\r\n                },\r\n            ]\r\n        },\r\n    ],\r\n    folderListData: [\r\n        {\r\n            name: 'Photos',\r\n            icon: PhotoIcon,\r\n            date: 'Jan 9, 2014',\r\n        }, {\r\n            name: 'Work',\r\n            icon: InboxWorkIcon,\r\n            date: 'Jan 7, 2014',\r\n        }, {\r\n            name: 'Vacatiopn',\r\n            icon: DraftsWorkIcon,\r\n            date: 'July 20, 2014',\r\n        },\r\n    ],\r\n}","export default __webpack_public_path__ + \"static/media/star.c227984a.svg\";","export default __webpack_public_path__ + \"static/media/inbox-work.d32ef626.svg\";","export default __webpack_public_path__ + \"static/media/drafts-work.2c905cf2.svg\";","import React from \"react\";\r\nimport CustomTimePicker from \"./components/CustomTimePicker\";\r\nimport CustomDatePicker from \"./components/CustomDatePicker\";\r\nimport CustomButton from \"./components/CustomButton\";\r\nimport CustomButtonGroup from \"./components/CustomButtonGroup\";\r\nimport CustomSlider from \"./components/CustomSlider\";\r\nimport CustomSwitch from \"./components/CustomSwitch\";\r\nimport SimpleList from \"./components/SimpleList\";\r\nimport NestedList from \"./components/NestedList\";\r\nimport FolderList from \"./components/FolderList\";\r\nimport CustomTextField from \"./components/CustomTextField\";\r\nimport CustomSelectBox from \"./components/CustomSelectBox\";\r\nimport LinearProgressBar from \"./components/LinearProgressBar\";\r\nimport CircularProgressBar from \"./components/CircularProgressBar\";\r\nimport SnackbarExample from \"./components/SnackBarExample\";\r\nimport \"./App.css\";\r\n\r\nimport { listData } from './dataInfo';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"w-full mx-auto flex p-6 bg-gray-100 rounded-lg shadow-xl grid grid-cols-2\">\r\n      <div className=\"pt-1 col-span-2 mb-5\">\r\n        <div className=\"rounded-t-xl overflow-hidden bg-gradient-to-r from-emerald-50 to-teal-100 p-10\">\r\n          <p className=\"text-purple-600 text-center text-xl font-semibold truncate\">MVP: React-Tailwind-Template</p>\r\n        </div>\r\n        <div className=\"overflow-hidden rounded-b-xl bg-emerald-500\">\r\n          <pre className=\"scrollbar-none overflow-x-auto p-6 text-sm leading-snug language-html text-white bg-black bg-opacity-75\">\r\n            The idea of this MVP is to develop a ready-made, easy-to-use (copy & paste) template based on React and Tailwind.\r\n            <br />\r\n            The template is based on these <a className=\"text-blue-500\" rel=\"noreferrer\" target=\"_blank\" href=\"https://tailwindui.com/components\">Tailwind components </a>\r\n            and <a className=\"text-blue-500\" rel=\"noreferrer\" target=\"_blank\" href=\"https://material-ui.com/\">material-ui.</a>\r\n          </pre>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"ml-6 pt-1 col-span-2\">\r\n        <div className=\"mb-5 flex\">\r\n          <CustomTimePicker label=\"Alarm clock\" />\r\n          <CustomDatePicker label=\"Date\" defaultValue={new Date(2020, 0, 1)} color=\"secondary\" />\r\n        </div>\r\n\r\n        <div className=\"mb-5\">\r\n          <LinearProgressBar defaultValue={30} color=\"primary\" />\r\n          <LinearProgressBar defaultValue={50} color=\"secondary\" />\r\n          <LinearProgressBar defaultValue={80} />\r\n        </div>\r\n\r\n        <div className=\"mb-5\">\r\n          <LinearProgressBar defaultValue={30} color=\"primary\" withLabel />\r\n          <LinearProgressBar defaultValue={50} color=\"secondary\" withLabel />\r\n          <LinearProgressBar defaultValue={80} withLabel />\r\n        </div>\r\n\r\n        <div className=\"mb-5 flex justify-around items-end\">\r\n          <CircularProgressBar defaultValue={80} radius={40} color=\"primary\" withLabel />\r\n          <CircularProgressBar defaultValue={50} radius={40} color=\"secondary\" withLabel />\r\n          <CircularProgressBar defaultValue={30} radius={40} withLabel />\r\n        </div>\r\n\r\n        <div className=\"mb-5 flex justify-around items-end\">\r\n          <CircularProgressBar defaultValue={80} radius={40} color=\"primary\" />\r\n          <CircularProgressBar defaultValue={50} radius={40} color=\"secondary\" />\r\n          <CircularProgressBar defaultValue={30} radius={40} />\r\n        </div>\r\n\r\n        <div className=\"mb-5 flex justify-between items-end\">\r\n          <CustomButton label=\"Primary button\" size=\"small\" color=\"primary\" />\r\n          <CustomButton label=\"Primary button\" size=\"medium\" color=\"primary\" />\r\n          <CustomButton label=\"Primary button\" size=\"large\" color=\"primary\" />\r\n        </div>\r\n        <div className=\"mb-5 flex justify-between items-end\">\r\n          <CustomButton label=\"Secondary button\" size=\"small\" color=\"secondary\" />\r\n          <CustomButton label=\"Secondary button\" size=\"medium\" color=\"secondary\" />\r\n          <CustomButton label=\"Secondary button\" size=\"large\" color=\"secondary\" />\r\n        </div>\r\n        <div className=\"mb-5 flex justify-between items-end\">\r\n          <CustomButton label=\"Default button\" size=\"small\" />\r\n          <CustomButton label=\"Default button\" size=\"medium\" />\r\n          <CustomButton label=\"Default button\" size=\"large\" />\r\n        </div>\r\n        <div className=\"mb-5 flex justify-between items-end\">\r\n          <CustomButtonGroup label={[\"ONE\", \"TWO\", \"THREE\"]} size=\"small\" variant=\"outlined\" />\r\n          <CustomButtonGroup label={[\"ONE\", \"TWO\", \"THREE\"]} size=\"medium\" variant=\"outlined\" />\r\n          <CustomButtonGroup label={[\"ONE\", \"TWO\", \"THREE\"]} size=\"large\" variant=\"outlined\" />\r\n        </div>\r\n        <div className=\"mb-5 flex justify-between items-end\">\r\n          <CustomButtonGroup label={[\"ONE\", \"TWO\", \"THREE\"]} size=\"small\" variant=\"contained\" />\r\n          <CustomButtonGroup label={[\"ONE\", \"TWO\", \"THREE\"]} size=\"medium\" variant=\"contained\" />\r\n          <CustomButtonGroup label={[\"ONE\", \"TWO\", \"THREE\"]} size=\"large\" variant=\"contained\" />\r\n        </div>\r\n        <div className=\"mb-5 flex justify-between items-end\">\r\n          <CustomButtonGroup label={[\"ONE\", \"TWO\", \"THREE\"]} size=\"small\" />\r\n          <CustomButtonGroup label={[\"ONE\", \"TWO\", \"THREE\"]} size=\"medium\" />\r\n          <CustomButtonGroup label={[\"ONE\", \"TWO\", \"THREE\"]} size=\"large\" />\r\n        </div>\r\n        <div className=\"mb-5 flex justify-between items-end\">\r\n          <CustomSlider defaultValue={30} color=\"primary\" />\r\n          <CustomSlider defaultValue={50} color=\"secondary\" />\r\n          <CustomSlider defaultValue={70} />\r\n        </div>\r\n        <div className=\"mb-5 flex justify-between items-end\">\r\n          <CustomSwitch defaultValue={true} label=\"Switch with label\" color=\"primary\" />\r\n          <CustomSwitch label=\"Switch with label\" color=\"secondary\" />\r\n          <CustomSwitch defaultValue={true} />\r\n        </div>\r\n\r\n        <div className=\"mb-5 flex justify-between items-end\">\r\n          <CustomTextField defaultValue=\"hello, world\" color=\"primary\" variant=\"outlined\" />\r\n          <CustomTextField defaultValue=\"hello, world\" color=\"secondary\" variant=\"outlined\" />\r\n          <CustomTextField defaultValue=\"hello, world\" variant=\"outlined\" />\r\n        </div>\r\n        <div className=\"mb-5 flex justify-between items-end\">\r\n          <CustomTextField defaultValue=\"hello, world\" color=\"primary\" />\r\n          <CustomTextField defaultValue=\"hello, world\" color=\"secondary\" />\r\n          <CustomTextField defaultValue=\"hello, world\" />\r\n        </div>\r\n\r\n        <div className=\"mb-5 flex justify-between items-end\">\r\n          <CustomSelectBox label=\"Assigned to\" defaultValue=\"Arlene Mccoy\" options={[\"Wade Cooper\", \"Arlene Mccoy\", \"Devon Webb\", \"Tom Cook\", \"Tanya Fox\", \"Hellen Schmidt\", \"Tailwind\"]} color=\"primary\" variant=\"outlined\" />\r\n          <CustomSelectBox label=\"Assigned to\" defaultValue=\"Arlene Mccoy\" options={[\"Wade Cooper\", \"Arlene Mccoy\", \"Devon Webb\", \"Tom Cook\", \"Tanya Fox\", \"Hellen Schmidt\", \"Tailwind\"]} color=\"secondary\" variant=\"outlined\" />\r\n          <CustomSelectBox label=\"Assigned to\" defaultValue=\"Arlene Mccoy\" options={[\"Wade Cooper\", \"Arlene Mccoy\", \"Devon Webb\", \"Tom Cook\", \"Tanya Fox\", \"Hellen Schmidt\", \"Tailwind\"]} variant=\"outlined\" />\r\n        </div>\r\n\r\n        <div className=\"mb-5 flex justify-between items-end\">\r\n          <CustomSelectBox label=\"Assigned to\" defaultValue=\"Arlene Mccoy\" options={[\"Wade Cooper\", \"Arlene Mccoy\", \"Devon Webb\", \"Tom Cook\", \"Tanya Fox\", \"Hellen Schmidt\", \"Tailwind\"]} color=\"primary\" />\r\n          <CustomSelectBox label=\"Assigned to\" defaultValue=\"Arlene Mccoy\" options={[\"Wade Cooper\", \"Arlene Mccoy\", \"Devon Webb\", \"Tom Cook\", \"Tanya Fox\", \"Hellen Schmidt\", \"Tailwind\"]} color=\"secondary\" />\r\n          <CustomSelectBox label=\"Assigned to\" defaultValue=\"Arlene Mccoy\" options={[\"Wade Cooper\", \"Arlene Mccoy\", \"Devon Webb\", \"Tom Cook\", \"Tanya Fox\", \"Hellen Schmidt\", \"Tailwind\"]} />\r\n        </div>\r\n\r\n        <div className=\"mb-5\">\r\n          <p className=\"text-2xl\">Positioned Snackbar</p>\r\n          <SnackbarExample />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"w-full flex flex-col md:flex-row justify-center items-start bg-gray-100 col-span-2\">\r\n        <div className=\"mx-4 w-full md:w-1/4 my-6\">\r\n          <h1 className=\"text-2xl pb-4\">Simple List</h1>\r\n          <SimpleList simpleListData={listData.simpleListData} />\r\n        </div>\r\n        <div className=\"mx-4 w-full md:w-1/4 my-6\">\r\n          <h1 className=\"text-2xl pb-4\">Nested List</h1>\r\n          <NestedList nestedListData={listData.nestedListData} />\r\n        </div>\r\n        <div className=\"mx-4 w-full md:w-1/4 my-6\">\r\n          <h1 className=\"text-2xl pb-4\">Folder List</h1>\r\n          <FolderList folderListData={listData.folderListData} />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './tailwind.output.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}